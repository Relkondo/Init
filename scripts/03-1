#!bin/bash
# --- Subject ------------------------------------------------------------------
# Create the script you want

fast_chr() {
		local octal_from_char
		local char_from_octal
		printf -v octal_from_char '%03o' $1
		printf -v char_from_octal \\$octal_from_char
		UNICODE=$char_from_octal
}

function unichr {
	local c=$1    # Ordinal of char
	local o=63    # Ceiling
	local p=128   # Accum. bits
	local s=''    # Output string
	
	if ((c < 0x80))
	then
		fast_chr "$c"
		printf "%s\n" "$UNICODE"
		return
	else
		while (( c > o )); do
			fast_chr $(( 0x80 | c & 0x3f ))
			s="$UNICODE$s"
			(( c >>= 6, p += o + 1, o >>= 1 ))
		done
		fast_chr $(( p | c ))
		printf "%s" "$UNICODE$s"
	fi
}

function zalgo {
	local space=0
	local char
	local little_rand=$(( RANDOM % $NUM + 1 ))
	printf -v char '%d' "'$1"
	if ((char != space || $NUM > 20))
	then
		for ((e = 0; e<little_rand; e++)); do
			unichr ${A_TEST[RANDOM % 112]}
		done
	fi
}

NUM=$1
STRING=$2
if [ -z "$1" ]
then
	printf "usage: sh 03 [0-49] [TEXTE]\n"
	exit
elif [ -z "$2" ]
then
	STRING=$1
	NUM=5
elif (( "$NUM" > 49 ))
then
	NUM=49
fi
A_TEST=($(seq 0x0300 1 0x036F))
printf "\n\n\n\n\n"
printf "\x1B[31m"
for (( i= 0; i<${#STRING}; i++ )); do
	printf "%s" "${STRING:$i:1}"
	if (( $NUM > 0 ))
	then
		zalgo ${STRING:$i:1}
	fi
done
printf "\n\n\n\n\n"
